---
- name: Install Docker
  block:
    - when: ansible_os_family == "Debian" and ansible_pkg_mgr == "apt"
      block:
        - name: Install Docker dependencies
          apt:
            name: "{{ packages }}"
            state: present
            update_cache: yes
          vars:
            packages:
              - apt-transport-https
              - ca-certificates
              - curl
              - gnupg-agent
              - software-properties-common

        - name: Add Docker APT GPG key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker APT repository
          apt_repository:
            repo: deb [arch={{ arch }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
            state: present

        - name: Install Docker packages
          apt: 
            name: "{{ packages }}"
            state: present
            update_cache: yes
            force: yes
          vars:
            packages:
              - docker-ce=5:19.03.15~3-0~ubuntu-bionic
              - docker-ce-cli=5:19.03.15~3-0~ubuntu-bionic
              - containerd.io

        - name: Hold Docker packages
          dpkg_selections:
            name: "{{ item }}"
            selection: hold
          loop:
            - docker-ce
            - docker-ce-cli
            - containerd.io
  become: true
  tags:
    - docker

- when: ansible_service_mgr == "systemd"
  block:
    - name: Create service configuration
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory

    - name: Configure proxy
      when: env.http_proxy is defined
      template:
        src: http-proxy.j2
        dest: /etc/systemd/system/docker.service.d/http-proxy.conf

    - name: Create /etc/docker
      file:
        path: /etc/docker
        state: directory

    - name: Configure daemon
      template: 
        src: daemon.j2
        dest: /etc/docker/daemon.json

    - name: Restart Docker service
      systemd:
        name: docker
        daemon_reload: yes
        state: restarted
        enabled: yes
      notify:
        - docker status

  become: true
  tags:
    - docker

